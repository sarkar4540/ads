/*
 * Copyright 2016 Aniruddha Sarkar.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package ani.ads;

import java.awt.Color;
import java.awt.Desktop;
import java.awt.Graphics;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PrintStream;
import java.sql.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.TimeZone;

import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.border.TitledBorder;
import javax.swing.filechooser.FileFilter;
import javax.swing.table.DefaultTableModel;

/**
 * This is the main window to be displayed
 * @author ani
 */
public class MainFrame extends javax.swing.JFrame {
    
    String logtxt;
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
                try {
                    icon.add(ImageIO.read(getClass().getResource("/ani/ads/phone.png")));
                    icon.add(ImageIO.read(getClass().getResource("/ani/ads/phone24.png")));
                    icon.add(ImageIO.read(getClass().getResource("/ani/ads/phone36.png")));
                    icon.add(ImageIO.read(getClass().getResource("/ani/ads/phone48.png")));
                    initComponents();
                    eng=new Engine();
                    //JOptionPane.showMessageDialog(null, "Frame E build");
                    
                        System.setErr(new PrintStream(new OutputStream() {
                            
                            @Override
                            public void write(int b) throws IOException {
                                logtxt+=(char)b; //To change body of generated methods, choose Tools | Templates.
                            }
                        }));
                        System.setOut(new PrintStream(new OutputStream() {
                            
                            @Override
                            public void write(int b) throws IOException {
                                logtxt+=(char)b; //To change body of generated methods, choose Tools | Templates.
                            }
                        }));
                        footer=ImageIO.read(getClass().getResource("/ani/ads/footer-pattern.png"));
                        
                        
                    
            lx=this.getX();
            ly=getY();
        //JOptionPane.showMessageDialog(null, "Frame build");
            
            
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
    * The engine used by this Window 
    */
    public Engine eng;
    /**
     * The icon sets of this window
     */
    public ArrayList<BufferedImage> icon=new ArrayList<>();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        openM = new javax.swing.JMenuItem();
        refresh = new javax.swing.JMenuItem();
        newFM = new javax.swing.JMenuItem();
        deleteM = new javax.swing.JMenuItem();
        backM = new javax.swing.JMenuItem();
        PasteM = new javax.swing.JMenuItem();
        CopyM = new javax.swing.JMenuItem();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel(){
            protected void paintComponent(Graphics g){
                if(screen!=null){
                    int h=jPanel7.getHeight(),w=jPanel7.getWidth(),bh=screen.getHeight(),bw=screen.getWidth();
                    g.setColor(new Color(255,0,0));
                    g.fillRect(0, 0, getWidth(), getHeight());
                    int width=(h/w<bh/bw)?h*bw/bh:w,height=(h/w<bh/bw)?h:w*bh/bw;
                    g.drawImage(screen, (w-width)/2, (h-height)/2, width,height, null);
                }
            }
        };
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton13 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList1 = new ani.ads.FileManager();
        jPanel3 = new javax.swing.JPanel();
        jButton14 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel(){
            protected void paintComponent(Graphics g){
                g.setColor(new Color(200,50,50));
                g.fillRect(0, 0, getWidth(), getHeight());
                g.drawImage(footer, getWidth()-footer.getWidth(), getHeight()-footer.getHeight()+23, null);
            }
        };
        jButton16 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();

        openM.setText("Open");
        openM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMActionPerformed(evt);
            }
        });
        jPopupMenu1.add(openM);

        refresh.setText("Refresh");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });
        jPopupMenu1.add(refresh);

        newFM.setText("New Folder");
        newFM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newFMActionPerformed(evt);
            }
        });
        jPopupMenu1.add(newFM);

        deleteM.setText("Delete");
        deleteM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteMActionPerformed(evt);
            }
        });
        jPopupMenu1.add(deleteM);

        backM.setText("Back to Parent Directory");
        backM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backMActionPerformed(evt);
            }
        });
        jPopupMenu1.add(backM);

        PasteM.setText("Paste Here");
        PasteM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasteMActionPerformed(evt);
            }
        });
        jPopupMenu1.add(PasteM);

        CopyM.setText("Copy...");
        CopyM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CopyMActionPerformed(evt);
            }
        });
        jPopupMenu1.add(CopyM);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Android Device Suite");
        setBackground(new java.awt.Color(255, 200, 200));
        setIconImage(icon.get(1)
        );
        setIconImages(icon);
        setUndecorated(true);
        setResizable(false);

        jTabbedPane1.setBackground(new java.awt.Color(255, 0, 0));
        jTabbedPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTabbedPane1.setForeground(new java.awt.Color(255, 100, 100));
        jTabbedPane1.setEnabled(false);
        jTabbedPane1.setFont(new java.awt.Font("RM Albion", 0, 48)); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 0, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Device"));
        jPanel1.setFont(new java.awt.Font("A Dark Wedding", 0, 18)); // NOI18N

        jButton1.setBackground(new java.awt.Color(255, 100, 100));
        jButton1.setFont(new java.awt.Font("A Dark Wedding", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(1, 1, 1));
        jButton1.setText("Scan");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(254, 254, 254));
        jLabel1.setFont(new java.awt.Font("A Dark Wedding", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(254, 254, 254));

        jPanel7.setFont(new java.awt.Font("DejaVu Serif", 0, 18)); // NOI18N

        jLabel6.setFont(new java.awt.Font("DejaVu Serif", 0, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(254, 254, 254));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 516, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Connected Device", jPanel1);

        jPanel4.setBackground(new java.awt.Color(255, 0, 0));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Android Device"));

        jLabel2.setBackground(new java.awt.Color(255, 100, 100));
        jLabel2.setFont(new java.awt.Font("A Dark Wedding", 0, 18)); // NOI18N
        jLabel2.setAutoscrolls(true);

        jButton13.setBackground(new java.awt.Color(255, 100, 100));
        jButton13.setFont(new java.awt.Font("DejaVu Serif", 0, 18)); // NOI18N
        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ani/ads/go-left.png"))); // NOI18N
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 100, 100));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ani/ads/folder-new.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 100, 100));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ani/ads/user-trash.png"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jList1);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane3)
                        .addContainerGap())
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 296, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("File Manager", jPanel2);

        jButton14.setText("Save");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "", "", "", "", ""
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 821, Short.MAX_VALUE)
                        .addComponent(jButton14))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 508, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton14)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Logcat", jPanel3);

        jPanel6.setBackground(new java.awt.Color(255, 0, 0));

        jButton9.setBackground(new java.awt.Color(255, 100, 100));
        jButton9.setFont(new java.awt.Font("A Dark Wedding", 0, 18)); // NOI18N
        jButton9.setForeground(new java.awt.Color(1, 1, 1));
        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ani/ads/software-properties.png"))); // NOI18N
        jButton9.setText("Install Apk");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(255, 100, 100));
        jButton7.setFont(new java.awt.Font("A Dark Wedding", 0, 18)); // NOI18N
        jButton7.setForeground(new java.awt.Color(1, 1, 1));
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ani/ads/user-trash_1.png"))); // NOI18N
        jButton7.setText("Uninstall Package");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setBackground(new java.awt.Color(255, 100, 100));
        jButton8.setFont(new java.awt.Font("A Dark Wedding", 0, 18)); // NOI18N
        jButton8.setForeground(new java.awt.Color(1, 1, 1));
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ani/ads/preferences-system-time.png"))); // NOI18N
        jButton8.setText("Backup");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton10.setBackground(new java.awt.Color(255, 100, 100));
        jButton10.setFont(new java.awt.Font("A Dark Wedding", 0, 18)); // NOI18N
        jButton10.setForeground(new java.awt.Color(1, 1, 1));
        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ani/ads/system-software-update.png"))); // NOI18N
        jButton10.setText("Restore");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setBackground(new java.awt.Color(255, 100, 100));
        jButton11.setFont(new java.awt.Font("A Dark Wedding", 0, 18)); // NOI18N
        jButton11.setForeground(new java.awt.Color(1, 1, 1));
        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ani/ads/media-flash.png"))); // NOI18N
        jButton11.setText("Reboot into recovery");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setBackground(new java.awt.Color(255, 100, 100));
        jButton12.setFont(new java.awt.Font("A Dark Wedding", 0, 18)); // NOI18N
        jButton12.setForeground(new java.awt.Color(1, 1, 1));
        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ani/ads/media-tape.png"))); // NOI18N
        jButton12.setText("Reboot into bootloader/fastboot");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 100, 100));
        jButton2.setFont(new java.awt.Font("A Dark Wedding", 0, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(1, 1, 1));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ani/ads/system-settings.png"))); // NOI18N
        jButton2.setText("Show build.prop");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(255, 100, 100));
        jButton5.setFont(new java.awt.Font("A Dark Wedding", 0, 18)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ani/ads/utilities-terminal.png"))); // NOI18N
        jButton5.setText("Open Shell");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 132, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(57, 57, 57)
                .addComponent(jLabel3))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3))
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jButton7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                            .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(25, 25, 25)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Utilities", jPanel6);

        jPanel8.setBackground(new java.awt.Color(255, 0, 0));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jButton6.setBackground(new java.awt.Color(255, 100, 100));
        jButton6.setFont(new java.awt.Font("A Dark Wedding", 0, 18)); // NOI18N
        jButton6.setText("Contacts");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton18.setBackground(new java.awt.Color(255, 100, 100));
        jButton18.setFont(new java.awt.Font("A Dark Wedding", 0, 18)); // NOI18N
        jButton18.setText("Messages");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jButton19.setBackground(new java.awt.Color(255, 100, 100));
        jButton19.setFont(new java.awt.Font("A Dark Wedding", 0, 18)); // NOI18N
        jButton19.setText("Logs");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 865, Short.MAX_VALUE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton19)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton18)
                    .addComponent(jButton19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Telephony", jPanel8);

        jLabel4.setBackground(new java.awt.Color(252, 132, 12));
        jLabel4.setFont(new java.awt.Font("A Dark Wedding", 0, 20)); // NOI18N
        jLabel4.setText("<html><body><font color=#FF0000><b>Disconnected</b></font></body></html>");

        jLabel5.setBackground(new java.awt.Color(252, 132, 12));

        jPanel5.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanel5MouseMoved(evt);
            }
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel5MouseDragged(evt);
            }
        });
        jPanel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel5MouseClicked(evt);
            }
        });

        jButton16.setBackground(new java.awt.Color(255, 100, 100));
        jButton16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ani/ads/window-minimize.png"))); // NOI18N
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton15.setBackground(new java.awt.Color(255, 15, 0));
        jButton15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ani/ads/window-close.png"))); // NOI18N
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton17.setBackground(new java.awt.Color(255, 100, 100));
        jButton17.setFont(new java.awt.Font("A Dark Wedding", 0, 18)); // NOI18N
        jButton17.setText("Development");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton17)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 53, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5))
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    String device,model,build,brand,serial,soc,os,osn,sdk,busybox,sdev;
    Thread ScanThread,statusThread,logcat;
    boolean root;
    Connection conc,cons;
    /**
     * Starts scanning of connected device and fetches info, screenshot, logcat info and starts monitor.
     * @param evt mouse click event
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jLabel6.setText("");
        if(ScanThread!=null){
        if(ScanThread.isAlive()){
            ScanThread.stop();
            jButton1.setText("Scan");
            resetall();
            ScanThread=null;
            screen=null;
            jPanel7.repaint();
            
        }
        }
        else{
            if(statusThread!=null){
            if(statusThread.isAlive()){
                statusThread.stop();
                statusThread=null;
            }
            }
            if(logcat!=null){
                if(logcat.isAlive()){
                    logcat.stop();
                    logcat=null;
                }
            }
            jButton1.setText("Stop Scanning...");
            jTabbedPane1.setEnabled(false);
            jButton2.setEnabled(false);
            ScanThread=new Thread(() -> {
                try {
                    eng.clearDev();
                    screen=ImageIO.read(getClass().getResource("/ani/ads/search.png"));
                    jPanel7.repaint();
                    
                    // TODO add your handling code here:
                    /*
                    jLabel1.setText("Killing Server...");
                    eng.run(eng.adb,"kill-server");
                    jLabel1.setText("Restarting Server...");
                    eng.run(eng.adb,"start-server");
                    jLabel1.setText("<html><body><b>Waiting</b> for a device to be connected... Make sure you have <b>connected properly and given proper permissions</b></body></html>");
                    eng.run(eng.adb,"wait-for-device");
                    */
                    String temp[]=eng.run(eng.adb,"devices").trim().split("\n");
                    if(temp.length<=1)jLabel6.setText("<html><body><h1>No devices Found!!!</h1><p><b>Check</b> the Following:<ol>"
                            + "<li>Your <b>ADB is enabled</b></li>"
                            + "<li>Your <b>datacable is connected</b></li>"
                            + "<li>You have <b>provided permission</b> to control ADB (a pop up box will be displayed right now if you havent already granted permission)</li>"
                            + "</ol></p><p>To <b>Enable ADB</b> you must:<ol>"
                            + "<li><b>Jellybean(4.1), ICS, CM9 and below (<= 4.1)</b> : Settings -> Developer Options -> Enable USB Debugging or Enable ADB</li>"
                            + "<li><b>JellyBean(4.2), KitKat, CM10 and up (>= 4.2)</b> : Settings -> About Device -> Build Number (Tap 3-5 times) -> back to Settings -> Developer Options -> Enable USB Debugging or Enable ADB</li>"
                            + "<li><b>MIUI</b> : Settings -> About Device -> Build Number (Tap 3-5 times) -> back to Settings -> Additional Settings -> Developer Options -> Enable USB Debugging or Enable ADB</li>"
                            + "<li><b>Other Custom ROMs </b> : Search internet with the name of the rom and version if above doesnt works</li>"
                            + "</ol></p></body></html>");
                    else{
                        String[] devices=new String[temp.length-1];
                        for(int i=0;i<devices.length;i++){
                            devices[i]=temp[i+1].replaceAll(((char)9)+"", " ");
                        }
                        sdev=JOptionPane.showInputDialog(null,"Select the Device:","Devices" , -1, null, devices, devices[0]).toString();
                    sdev=sdev.trim().substring(0, sdev.indexOf(" "));
                    eng.setdev(sdev);
                    model=eng.getprop("ro.product.device");
                    device=eng.getprop("ro.product.model");
                    brand=eng.getprop("ro.product.brand");
                    ((TitledBorder)jPanel4.getBorder()).setTitle(brand+" "+device);
                    os=eng.getprop("ro.build.version.release");
                    sdk=eng.getprop("ro.build.version.sdk");
                    build =eng.getprop("ro.build.display.id");
                    soc=eng.getprop("ro.board.platform");
                    busybox=eng.run(eng.adb,"shell","busybox");
                    root=eng.rootCheck();
                    String s=eng.getShot();
                    jPanel8.setEnabled(root);
                    screen=ImageIO.read(new File(s));
                    jPanel7.repaint();
                    jLabel6.setText("["+brand+" "+model+" Screenshot]");
                    if(root){
                            try {
                                Class.forName("org.sqlite.JDBC");
                        eng.run(eng.adb,"pull","/data/data/com.android.providers.contacts/databases/",eng.ush+"/.ads/");
                        eng.run(eng.adb,"pull","/data/data/com.android.providers.telephony/databases/",eng.ush+"/.ads/");
                            cons=DriverManager.getConnection("jdbc:sqlite:"+eng.ush+"/.ads/mmssms.db");
                            conc=DriverManager.getConnection("jdbc:sqlite:"+eng.ush+"/.ads/contacts2.db");
                            } catch (SQLException | ClassNotFoundException ex) {
                                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                    }
                    
                    if(busybox.toLowerCase().startsWith("busybox"))busybox="Yes";
                    else busybox="No";
                    jLabel1.setText("<html><body bgcolor><table>" +
                            "<tr><td><b>Brand:</b></td><td>"+brand+"</td></tr><tr><td><b>Device:</b></td><td>"+device
                            +"</td></tr><tr><td><b>Model:</b></td><td>"+model+"</td></tr>"
                            + "<tr><td><b>Build:</b></td><td>"+build+"</td></tr>"
                            + "<tr><td><b>Android Version:</b></td><td>"+os+"("+eng.getAndroid()+")</td></tr>"
                            + "<tr><td><b>Android SDK:</b></td><td>"+sdk+"</td></tr>"
                            + "<tr><td><b>SOC:</b></td><td>"+soc+"</td></tr>"
                            + "<tr><td><b>Root enabled:</b></td><td>"+(root?"Yes":"No (maybe not permitted over adb)")+"</td></tr>"
                            + "<tr><td><b>Busybox:</b></td><td>"+busybox+"</td></tr>"
                            + "</table></body></html>");
                    
                    
                    statusThread=new Thread(() -> {
                        try {
                            Process p=Runtime.getRuntime().exec(new String[]{eng.adb,"-s",sdev,"status-window"});
                            InputStream is=p.getInputStream();
                            int a;
                            String k="";
                            do{
                                a=(is.read());
                                if(k.trim().toLowerCase().endsWith("state: device")){
                                    jLabel5.setText("Finishing Connection...");
                                    d=5;
                                    jLabel4.setText("<html><body ><font color=#009900><b>Connected</b> :</font><u> "+brand+" "+device+"</u></body></html>");
                                    
                                }else if(k.trim().toLowerCase().endsWith("state: unknown")){
                                    jLabel5.setText("Resetting...");
                                    d=5;
                                    jLabel4.setText("<html><body ><font color=#FF0000><b>Disconnected</b></font></body></html>");
                                    p.destroy();
                                    resetall();
                                }
                                k+=(char)a;
                            }while(p.isAlive());
                        } catch (IOException ex) {
                            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    });
                    statusThread.start();
                    logcat=new Thread(() -> {
                        String strk="";
                        logal=new ArrayList<>();
                        try{
                            Process p=Runtime.getRuntime().exec(new String[]{eng.adb,"-s",sdev,"logcat"});
                            InputStream is=p.getInputStream();
                            int a;
                            do{
                                a=(is.read());
                                if(a!=-1){
                                    d=5;
                                    jLabel5.setText("Loading logcat...");
                                    if(a=='\n'){
                                        int i=0;
                                        Object[] ob=new Object[6];
                                        ob[5]="";
                                        for(String st:trimSpac(strk).split(" ")){
                                            if(i<5){
                                                ob[i]=st;
                                            }
                                            else if(st!=null){
                                                ob[5]+=st;
                                            }
                                            i++;
                                        }
                                        logal.add(ob);
                                        jTable1.setModel(new DefaultTableModel(logal.toArray(new Object[0][6]), new String[6]));
                                        strk="";
                                    }
                                    else strk+=((char)a+"");
                                    
                                }
                            }while(p.isAlive());
                        
                        } catch (IOException ex) {
                            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    
                    });
                    logcat.start();
                    Timer t=new Timer();
                    t.scheduleAtFixedRate(new TimerTask(){
                        
                        @Override
                        public void run() {
                            d--;
                            if(d>=0)jLabel5.setText("");//To change body of generated methods, choose Tools | Templates.
                        }
                    },0, 1000);
                    
                    }
                    jButton1.setText("Scan");
                    jTabbedPane1.setEnabled(true);
                    jButton2.setEnabled(true);
                    refreshDir();
                    ScanThread=null;
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null, "Error while finding... Please click the Development button on top and support the developer to make things better");
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }   });
            ScanThread.start();
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    String trimSpac(String s){
        while(true){
            if(s.contains("  ")){
                s=s.replaceAll("  ", " ");
            }else break;
        }
        return s;
    }
    ArrayList<Object[]> logal=new ArrayList<>();
    String curdird="/storage/";
    BufferedImage screen;
    int d=0;
    
    /**
     * Shows build.prop
     * @param evt 
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            // TODO add your handling code here:
            new TextViewer("Build.prop ("+brand+" "+device+")",eng.getAllProps()).setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed
/**
 * Makes a directory in current directory
 * @param evt 
 */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            String fn=JOptionPane.showInputDialog("Enter the Name:"),kr;
            if((kr=eng.run(eng.adb,"shell", "mkdir",curdird+fn+"/")).length()>0)
                JOptionPane.showMessageDialog(null, kr, "Error!", JOptionPane.ERROR_MESSAGE);
            else {
                refreshDir();
            }
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed
/**
 * Browser through the files and folders on device
 * @param evt 
 */
 void FileManagerAct(MouseEvent evt){
    if(evt.getButton()==3){
            newFM.setEnabled(true);
            backM.setEnabled(true);
            deleteM.setEnabled(true);
            PasteM.setEnabled(true);
            CopyM.setEnabled(true);
            openM.setEnabled(true);
            if(jList1.isSelectionEmpty()){
                deleteM.setEnabled(false);
                CopyM.setEnabled(false);
                openM.setEnabled(false);
                
            }
            
            if(curdird.equals("/storage/")){
                newFM.setEnabled(false);
                backM.setEnabled(false);
                deleteM.setEnabled(false);
                PasteM.setEnabled(false);
            }
            jPopupMenu1.show(jList1, evt.getX(), evt.getY());
        }
        
        if(evt.getClickCount()==2){
            if(((FType)jList1.getSelectedValue()).to().trim().equals("/storage/")){
                curdird="/storage/";
            }
            else{
                FType ft=(FType)jList1.getSelectedValue();
                String k=(ft).to().trim().toLowerCase();//kr=eng.run(eng.adb,"shell", "ls",curdird+k+"/").toLowerCase();
                
                if(!(ft.fo().equals("4")||ft.fo().equals("0"))){
                    /*String sde=JOptionPane.showInputDialog(null, "What would you like to do with "+k+"?", "Selection",-1, null, new String[]{"View as Text File","Copy to Computer and Open as default"},null).toString();
                    if(sde!=null){
                    if(sde.startsWith("View")){
                    eng.run(eng.adb,"pull",curdird+k,eng.ush+"/.ads/"+k);
                    String txt="";
                    Scanner sc=new Scanner(new FileInputStream(eng.ush+"/.ads/"+k));
                    while(sc.hasNextLine())txt+=sc.nextLine()+"\n";
                    new TextViewer(k,txt).setVisible(true);
                    }
                    else if(sde.startsWith("Copy")){
                    eng.run(eng.adb,"pull",curdird+k,eng.ush+"/.ads/"+k);
                    Desktop.getDesktop().open(new File(eng.ush+"/.ads/"+k));
                    }
                    }*/
                    new Thread(()->{
                        try {
                            jList1.setEnabled(false);
                            jLabel2.setText("Please wait...");
                            File f=new File(eng.ush+"/.ads/cache/"+k);
                            if(!f.exists()){
                                eng.run(eng.adb,"pull",curdird+k,eng.ush+"/.ads/cache/"+k);
                            }
                            jLabel2.setText("");
                            Desktop.getDesktop().open(new File(eng.ush+"/.ads/cache/"+k));
                            jList1.setEnabled(true);
                        } catch (IOException ex) {
                            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }).start();
                    
                }
                else {
                    curdird+=k+"/";
                    jLabel2.setText(((FType)jList1.getSelectedValue()).to()+"");
                    refreshDir();
                }
            }
        }
}
/**
 * Installs an app to the device
 * @param evt 
 */
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        new Thread(() -> {
            JFileChooser jfc=new JFileChooser();
            jfc.setFileFilter(new FileFilter() {
                
                @Override
                public boolean accept(File f) {
                    return f.getAbsolutePath().endsWith(".apk")||f.isDirectory(); //To change body of generated methods, choose Tools | Templates.
                }
                
                @Override
                public String getDescription() {
                    return "Application Packages"; //To change body of generated methods, choose Tools | Templates.
                }
            });
            jfc.showDialog(null, "Install");
            File f=jfc.getSelectedFile();
            if(f!=null&&f.getAbsolutePath().endsWith(".apk")){
                try {
                    jLabel3.setText("Installing...");
                    String ret=eng.run(eng.adb,"install",f.getAbsolutePath());
                    if(ret.trim().toLowerCase().endsWith("success"))jLabel3.setText("Installed!");
                    else jLabel3.setText( "Couldn't install: "+ret);
                } catch (IOException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }).start();
    }//GEN-LAST:event_jButton9ActionPerformed
/**
 * Uninstalls an app from the device
 * @param evt 
 */
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        new Thread(() -> {
            try {
                // TODO add your handling code here:
                String pkgs[]=eng.run(eng.adb,"shell","pm","list","packages","-3").split("\n");
                for(int i=0;i<pkgs.length;i++){
                    pkgs[i]=pkgs[i].substring(pkgs[i].indexOf(":")+1);
                }
                String pname=JOptionPane.showInputDialog(null, "Select the Package:", "Uninstaller", -1, null, pkgs, pkgs[0]).toString();
                if(pname !=null){
                    jLabel3.setText("Uninstalling...");
                    String ret=eng.run(eng.adb,"uninstall",pname);
                    if(ret.trim().toLowerCase().endsWith("success"))jLabel3.setText("Uninstalled!");
                    else jLabel3.setText( "Couldn't install: "+ret);
                }
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }).start();
    }//GEN-LAST:event_jButton7ActionPerformed
/**
 * Creates a backup
 * @param evt 
 */
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        /*final boolean apk=JOptionPane.showConfirmDialog(null, "Would you like to backup apks?")==0,
                shared=JOptionPane.showConfirmDialog(null, "Would you like to backup shared storage(SD Card?)")==0,
                system=JOptionPane.showConfirmDialog(null, "Would you like to backup the system applications?")==0;
        */
        JFileChooser jfc=new JFileChooser();
        jfc.setFileFilter(new FileFilter() {

            
            @Override
            public boolean accept(File f) {
                return f.getAbsolutePath().endsWith(".ab")||f.isDirectory(); //To change body of generated methods, choose Tools | Templates.
            }

            
            @Override
            public String getDescription() {
                return "Backup Archives"; //To change body of generated methods, choose Tools | Templates.
            }
        });
        jfc.showSaveDialog(null);
        final File f=jfc.getSelectedFile();
        
        if(f!=null&&!f.isDirectory()){
            jButton8.setEnabled(false);
            //jLabel3.setText("Backing Up... (please confirm in your phone)");
            new Thread(() -> {
                try {
                    File dr=f;
                    if(!f.getAbsolutePath().endsWith(".ab"))dr=new File(f.getAbsolutePath().trim()+".ab");
                    dr.createNewFile();
                    //jLabel3.setText("Backing Up... (please confirm in your phone)");
                    jLabel5.setText("Backing up... (Please confirm in your phone)");
                    eng.run(eng.adb,"backup","-f","'"+dr.getAbsolutePath().trim()+"'","-all");
                    Thread.sleep(500);
                    jLabel5.setText("");
                    jButton8.setEnabled(true);
                    
                } catch (IOException | InterruptedException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }).start();
            
        }
    }//GEN-LAST:event_jButton8ActionPerformed
/**
 * Restores a backup
 * @param evt 
 */
    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc=new JFileChooser();
        jfc.setFileFilter(new FileFilter() {

            
            @Override
            public boolean accept(File f) {
                return f.getAbsolutePath().endsWith(".ab")||f.isDirectory(); //To change body of generated methods, choose Tools | Templates.
            }

            
            @Override
            public String getDescription() {
                return "Backup Archives"; //To change body of generated methods, choose Tools | Templates.
            }
        });
        jfc.showOpenDialog(null);
        final File f=jfc.getSelectedFile();
        
        if(f!=null&&!f.isDirectory()){
            jButton8.setEnabled(false);
            new Thread(() -> {
                try {
                    File dr=f;
                    if(!f.getAbsolutePath().endsWith(".ab"))dr=new File(f.getAbsolutePath().trim()+".ab");
                    dr.createNewFile();
                    jLabel3.setText("Restoring... (please confirm in your phone)");
                    eng.run(eng.adb,"restore",dr.getAbsolutePath().trim());
                    jLabel3.setText("");
                    jButton8.setEnabled(true);
                    
                } catch (IOException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }).start();
            
        }
    }//GEN-LAST:event_jButton10ActionPerformed
/**
 * Reboots into recovery
 * @param evt 
 */
    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        try {
            // TODO add your handling code here:
            JOptionPane.showMessageDialog(null, eng.run(eng.adb,"reboot","recovery"));
            resetall();
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton11ActionPerformed
/**
 * Reboots into bootloader
 * @param evt 
 */
    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            JOptionPane.showMessageDialog(null, eng.run(eng.adb,"reboot","bootloader"));
            resetall();
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton12ActionPerformed
/**
 * Goes to upper directory of the device
 * @param evt 
 */
    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
                    String[] cda=curdird.substring(0, curdird.length()).split("/");
                    curdird="";
                    for(int i=0;i<cda.length-1;i++){
                        curdird+=cda[i]+"/";
                    }
                    if(!curdird.startsWith("/storage/"))
                        curdird="/storage/";
                                
                    refreshDir();
    }//GEN-LAST:event_jButton13ActionPerformed
/**
 * Saves logcat info
 * @param evt 
 */
    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        JFileChooser jfc=new JFileChooser();
        jfc.showSaveDialog(null);
        File f=jfc.getSelectedFile();
        if(f!=null){
            String st="";
            for(int i=0;i<jTable1.getRowCount();i++){
                for(int j=0;j<6;j++){
                    st+=jTable1.getValueAt(i, j)+" ";
                }
                st+="\n";
            }
            try (OutputStream ofs = new FileOutputStream(f)) {
                if(logal!=null){
                    ofs.write(st.getBytes());
                }
            } catch (FileNotFoundException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
            
         
    }//GEN-LAST:event_jButton14ActionPerformed
/**
 * Drags this window
 * @param evt 
 */
    private void jPanel5MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseDragged
        // TODO add your handling code here:
       lx=getX();
       ly=getY();
       lx+=(evt.getXOnScreen()-px);
       ly+=evt.getYOnScreen()-py;
       setLocation(lx,ly);
       px=evt.getXOnScreen();
       py=evt.getYOnScreen();
    }//GEN-LAST:event_jPanel5MouseDragged
@Deprecated
    private void jPanel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel5MouseClicked
/**
 * initiates a drag
 * @param evt 
 */
    private void jPanel5MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseMoved
        // TODO add your handling code here:
        
        px=evt.getXOnScreen();
        py=evt.getYOnScreen();
    }//GEN-LAST:event_jPanel5MouseMoved
/**
 * Exits the program
 * @param evt 
 */
    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
        if(ScanThread!=null)ScanThread.stop();
        if(statusThread!=null)statusThread.stop();
        if(logcat!=null)logcat.stop();
        clearCache();
        System.exit(0);
    }//GEN-LAST:event_jButton15ActionPerformed
BufferedImage footer;
/**
 * Iconifies this window
 * @param evt 
 */
    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jButton16ActionPerformed
/**
 * Allows saving logs and show development info
 * @param evt 
 */
    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc=new JFileChooser();
        if(JOptionPane.showConfirmDialog(null, "Would you like to support development?")==0){
            
                JOptionPane.showMessageDialog(null, "Please save the log file generated and send it to the developers email address.");
                jfc.showSaveDialog(null);
                File f=jfc.getSelectedFile();
            try {
                    try (OutputStream ofs = new FileOutputStream(f)) {
                        ofs.write(logtxt.getBytes());
                    }
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            } 
        }
        JOptionPane.showMessageDialog(null, "<html><body><p align=center><h1>Android Device Suite</h1><p align=right><i>for Linux</i></p><hr><p>Developed by &copy; <b>Aniruddha Sarkar</b> <br> email: sarkar4540@gmail.com</p><p>Licensed under <b>GNU/GPLv2</b>.</p></p></body></html>","Development",0,new ImageIcon(icon.get(0)));
    }//GEN-LAST:event_jButton17ActionPerformed

    private void openMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMActionPerformed
        // TODO add your handling code here:
        FType ft=(FType)jList1.getSelectedValue();
                String k=(ft).to().trim().toLowerCase();//kr=eng.run(eng.adb,"shell", "ls",curdird+k+"/").toLowerCase();
                
                if(!(ft.fo().equals("4")||ft.fo().equals("0"))){
                    /*String sde=JOptionPane.showInputDialog(null, "What would you like to do with "+k+"?", "Selection",-1, null, new String[]{"View as Text File","Copy to Computer and Open as default"},null).toString();
                    if(sde!=null){
                    if(sde.startsWith("View")){
                    eng.run(eng.adb,"pull",curdird+k,eng.ush+"/.ads/"+k);
                    String txt="";
                    Scanner sc=new Scanner(new FileInputStream(eng.ush+"/.ads/"+k));
                    while(sc.hasNextLine())txt+=sc.nextLine()+"\n";
                    new TextViewer(k,txt).setVisible(true);
                    }
                    else if(sde.startsWith("Copy")){
                    eng.run(eng.adb,"pull",curdird+k,eng.ush+"/.ads/"+k);
                    Desktop.getDesktop().open(new File(eng.ush+"/.ads/"+k));
                    }
                    }*/
                    new Thread(()->{
                        try {
                            jList1.setEnabled(false);
                            jLabel2.setText("Please wait...");
                            File f=new File(eng.ush+"/.ads/cache/"+k);
                            if(!f.exists())
                                eng.run(eng.adb,"pull",curdird+k,eng.ush+"/.ads/cache/"+k);
                            
                            jLabel2.setText("");
                            Desktop.getDesktop().open(new File(eng.ush+"/.ads/cache/"+k));
                            jList1.setEnabled(true);
                        } catch (IOException ex) {
                            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }).start();
                    
                }
                else {
                    curdird+=k+"/";
                    jLabel2.setText(((FType)jList1.getSelectedValue()).to()+"");
                    refreshDir();
                }
    }//GEN-LAST:event_openMActionPerformed

    private void backMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backMActionPerformed
        // TODO add your handling code here:
                            String[] cda=curdird.substring(0, curdird.length()).split("/");
                    curdird="";
                    for(int i=0;i<cda.length-1;i++){
                        curdird+=cda[i]+"/";
                    }
                    if(!curdird.startsWith("/storage/"))
                        curdird="/storage/";
                                
                    refreshDir();
    }//GEN-LAST:event_backMActionPerformed

    private void newFMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newFMActionPerformed
        // TODO add your handling code here:
                try {
            String fn=JOptionPane.showInputDialog("Enter the Name:"),kr;
            if((kr=eng.run(eng.adb,"shell", "mkdir",curdird+fn+"/")).length()>0)
                JOptionPane.showMessageDialog(null, kr, "Error!", JOptionPane.ERROR_MESSAGE);
            else {
                refreshDir();
            }
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_newFMActionPerformed

    private void deleteMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteMActionPerformed
        // TODO add your handling code here:
                try {
            String fn=((FType)jList1.getSelectedValue()).to().trim(),kr;
            if(JOptionPane.showConfirmDialog(null,"Are you sure you want to permanently delete "+fn+"?")==0)
            if((kr=eng.run(eng.adb,"shell", "rm","-r",curdird+fn)).length()>0)
                JOptionPane.showMessageDialog(null, kr, "Error!", JOptionPane.ERROR_MESSAGE);
            else {
                JOptionPane.showMessageDialog(null,"Deleted "+fn);
                refreshDir();
            }
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteMActionPerformed

    private void PasteMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasteMActionPerformed
        // TODO add your handling code here:
        new Thread(() -> {  
        Clipboard cb=Toolkit.getDefaultToolkit().getSystemClipboard();
        if(cb.isDataFlavorAvailable(DataFlavor.javaFileListFlavor)){
            try {
                List<File> s=(List)cb.getData(DataFlavor.javaFileListFlavor);
            
            if(JOptionPane.showConfirmDialog(null, "<html><body><p>Are you sure you want to copy to the Directory: <i>"+curdird+"</i> of the Device</p></body></html>")==0){
            
            Copy c=new Copy(-1);
            c.setVisible(true); 
            c.setLocation(250,150);
                for(File st:s){
            
            String kr=eng.run(eng.adb,"push",st.getAbsolutePath(),curdird);
                    if(kr.startsWith("///\\\\")){
                        JOptionPane.showMessageDialog(null, "Error... Couldn't Copy!!!");
                        break;
                    }
            
        
                    }
                
                refreshDir();
            c.dispose();
                }
            } catch (UnsupportedFlavorException | IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
                
        }
        
        
}).start();
        
    }//GEN-LAST:event_PasteMActionPerformed

/**
 * Deletes file/folder from device
 * @param evt 
 */
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        try {
            String fn=((FType)jList1.getSelectedValue()).to().trim(),kr;
            if((kr=eng.run(eng.adb,"shell", "rm","-r",curdird+fn)).length()>0)
            JOptionPane.showMessageDialog(null, kr, "Error!", JOptionPane.ERROR_MESSAGE);
            else {
                JOptionPane.showMessageDialog(null,"Deleted "+fn);
                refreshDir();
            }
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        // TODO add your handling code here:
        refreshDir();
    }//GEN-LAST:event_refreshActionPerformed

    private void CopyMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CopyMActionPerformed
        // TODO add your handling code here:
        
        new Thread(()->{
            JFileChooser jfc=new JFileChooser();
            jfc.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
            jfc.showSaveDialog(null);
            File f=jfc.getSelectedFile();
            if(f!=null){
            Copy c=new Copy(1);
            c.setVisible(true); 
            c.setLocation(250,150);
                try {
                    if(f.isDirectory()){
                        FType ft=(FType)jList1.getSelectedValue();
                            String fn=ft.to().trim();
                            eng.run(eng.adb,"pull", curdird+fn,f.getAbsolutePath());
                        
                    }
                    else{
                        String fn=((FType)jList1.getSelectedValue()).to().trim();
                        eng.run(eng.adb,"pull", curdird+fn,f.getAbsolutePath());
                    }
                    if(!f.isDirectory()&&f.exists()){
                        Desktop.getDesktop().open(f.getParentFile());
                    }
                    if(f.isDirectory()){
                        Desktop.getDesktop().open(f);
                    }
                } catch (IOException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            c.dispose();
            }
        }).start();
    }//GEN-LAST:event_CopyMActionPerformed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        // TODO add your handling code here:
        FileManagerAct(evt);
    }//GEN-LAST:event_jList1MouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int r=jTable1.getSelectedRow();
        if(r>-1){
            JOptionPane.showMessageDialog(null, "Date:"+jTable1.getValueAt(r, 0)+"  Time:"+
                    jTable1.getValueAt(r, 1)+"\n"+
                    jTable1.getValueAt(r, 2)+"\n"+
                    jTable1.getValueAt(r, 3)+"\n"+
                    jTable1.getValueAt(r, 4)+"\n"+
                    jTable1.getValueAt(r, 5));
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        new Term(eng.adb,"-s",sdev,"shell").setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            Statement stmt=conc.createStatement();
            ResultSet rs=stmt.executeQuery("SELECT raw_contacts._id, raw_contacts.display_name, raw_contacts.display_name_alt, mimetypes.mimetype,data.data1, data.data2,data.data3,data.data4,  data.data5, data.data6, data.data7, data.data8, data.data9, data.data10 FROM raw_contacts, data, mimetypes WHERE raw_contacts.deleted = 0 AND raw_contacts._id = data.raw_contact_id AND data.mimetype_id = mimetypes._id ;");
            //ORDER BY raw_contacts._id, mimetypes._id, data.data2
            DefaultTableModel dtm=new DefaultTableModel(new String[]{"Name","Phone","Email","Address","Identity"},0);
            int g=0;
            String rdata="";
            String data[]=null;
            while(rs.next()){
                if(!rdata.equals(rs.getString(1))&&g<10){
                    g=0;
                    rdata=rs.getString(1);
                    dtm.addRow(data);
                    data=null;
                }
                
                if(data==null)data=new String[]{"","","","",""};
                String mime=rs.getString("mimetype");
                mime=mime.substring(mime.lastIndexOf("/"));
                String gd=(rs.getString("data1")==null?"":(rs.getString("data1")/*+" ("+
                        (rs.getString("data2")==null?"":rs.getString("data2")+", ")+
                        (rs.getString("data3")==null?"":rs.getString("data3")+", ")+
                        (rs.getString("data4")==null?"":rs.getString("data4")+", ")+
                        (rs.getString("data5")==null?"":rs.getString("data5")+", ")+
                        (rs.getString("data6")==null?"":rs.getString("data6")+", ")+
                        (rs.getString("data7")==null?"":rs.getString("data7")+", ")+
                        (rs.getString("data8")==null?"":rs.getString("data8")+", ")+
                        (rs.getString("data9")==null?"":rs.getString("data9"))+")"*/))
                        ;
                
                if(gd!=null)if(!gd.trim().equals("")){
                
                    if(mime.contains("email")){
                        if(!data[2].equals(""))data[2]+=", \n";
                        data[2]+=gd;
                    }
                    if(mime.contains("phone")){
                        if(!data[1].equals(""))data[1]+=", \n";
                        data[1]+=gd;
                    }
                    if(mime.contains("name")){
                        if(!data[0].equals(""))data[0]+=", \n";
                        data[0]+=gd;
                    }
                    if(mime.contains("address")){
                        if(!data[3].equals(""))data[3]+=", \n";
                        data[3]+=gd;
                    }
                    if(mime.contains("identity")){
                        if(!data[4].equals(""))data[4]+=", \n";
                        data[4]+=gd;
                    }
                }
            }
            jTable2.setModel(dtm);
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
                int r=jTable2.getSelectedRow();
        if(r!=-1){
        String s="";
        for(int i=0;i<jTable2.getColumnCount();i++){
            Object k=jTable2.getValueAt(r, i);
            if(k!=null)if(!k.toString().trim().equals(""))s+=jTable2.getColumnName(i)+": "+k+"\n\n";
        }
            JOptionPane.showMessageDialog(null, s);
                
        }
    }//GEN-LAST:event_jTable2MouseClicked

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            Statement stmt=cons.createStatement();
            ResultSet rs=stmt.executeQuery("select * from sms order by _id desc;");
            String[] clm={"Number","Date/Time ("+(TimeZone.getDefault().getDisplayName())+")","Subject","Body","Service Center"};
            DefaultTableModel dtm=new DefaultTableModel(clm,0);
            while(rs.next()){
                String data[]=new String[clm.length];
                data[0]=rs.getString("address");
                Date dt=new Date(Long.parseLong(rs.getString("date")));
                DateFormat format = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
                format.setTimeZone(TimeZone.getDefault());
                data[1]=format.format(dt);
                data[2]=rs.getString("subject");
                data[3]=rs.getString("body");
                data[4]=rs.getString("service_center");
                dtm.addRow(data);
            }
            jTable2.setModel(dtm);
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        // TODO add your handling code here:
                        try {
            // TODO add your handling code here:
            Statement stmt=conc.createStatement();
            ResultSet rs=stmt.executeQuery("select * from calls order by _id desc;");
            String[] clm={"Name","Number","Date/Time ("+(TimeZone.getDefault().getDisplayName())+")","Duration","Type"};
            DefaultTableModel dtm=new DefaultTableModel(clm,0);
            while(rs.next()){
                String data[]=new String[clm.length];
                data[0]=rs.getString("name");
                data[1]=rs.getString("number");
                Date dt=new Date(Long.parseLong(rs.getString("date")));
                DateFormat format = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
                format.setTimeZone(TimeZone.getDefault());
                data[2]=format.format(dt);
                data[3]=rs.getString("duration")+" secs";
                int typ=rs.getInt("type");
                data[4]=typ==1?"Incoming":typ==2?"Outgoing":"Missed";
                dtm.addRow(data);
            }
            jTable2.setModel(dtm);
        } catch (SQLException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton19ActionPerformed
    int lx=0,ly=0,px,py;
    
    /**
    * Refreshes the directories
    */
    void refreshDir(){
        new Thread(() -> {
            try {
                jList1.setEnabled(false);
                curdird=curdird.trim();
                final String[] strings = eng.getchilds(curdird);
                final ArrayList<FType> al=new ArrayList<>();
                jLabel2.setText("Loading...");
                for (String str : strings) {
                    if(str!=null)
                    if(!str.trim().equals("")){
                    String name=str.substring(str.indexOf(" ")).trim(),type=str.substring(0,str.indexOf(" ")).trim();
                    FType ft=new FType(name,(type.equals("4")||type.equals("0"))?"[Directory]":""/* "[File]"*/,type);
                    /*if(kr.contains("permission denied")){
                        FType ft=new FType(str,"-> (No Permission)");
                        al.add(ft);
                    }
                    else if(kr.contains(": not a directory")){
                        FType ft=new FType(str,"-> (File)");
                        al.add(ft);
                        
                    }else{
                        FType ft=new FType(str,"-> (Folder)");
                        al.add(ft);
                        
                    }
                    */
                    al.add(ft);
                    }
                    //JOptionPane.showMessageDialog(null, kr);
                }
                jList1.setModel(new javax.swing.AbstractListModel() {
                    @Override
                    public int getSize() { return al.size(); }
                    @Override
                    public Object getElementAt(int i) { return(al.get(i)); }
                });
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                
            }
            
            jLabel2.setText(curdird);
            jList1.setEnabled(true);
        }).start();
        
    }
    /*
    * Resets all fields and components as it was in the beginning
    */
    private void resetall(){
        jTabbedPane1.setEnabled(false);
        jTabbedPane1.setSelectedIndex(0);
        screen=null;
        jLabel1.setText("");
        if(statusThread!=null){
            if(statusThread.isAlive()){
                statusThread.stop();
                statusThread=null;
            }
            }
        clearCache();
    }
    private void clearCache(){
        for(File s:new File(eng.ush+"/.ads/cache/").listFiles()){
            s.delete();
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.LookAndFeelInfo[] lfi=javax.swing.UIManager.getInstalledLookAndFeels();
            for (UIManager.LookAndFeelInfo lfi1 : lfi) {
                if ("Nimbus".equals(lfi1.getName())) {
                    javax.swing.UIManager.setLookAndFeel(lfi1.getClassName());
                    break;
                }
            }
        } catch (javax.swing.UnsupportedLookAndFeelException | ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
            new MainFrame().setVisible(true);
        
    }
    
    /**
     * The file type class used by JList
     */
    public class FType{
        FType(String s,String t,String gt){
            this.s=s;
            this.t=t;
            this.gt=gt;
        }
        String s,t,gt;
        
        @Override
        public String toString(){
            return (s+"  "+t);
        }
        public String to(){
            return (s);
        }
        public String fo(){
            return (gt);
        }
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem CopyM;
    private javax.swing.JMenuItem PasteM;
    private javax.swing.JMenuItem backM;
    private javax.swing.JMenuItem deleteM;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private ani.ads.FileManager jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JMenuItem newFM;
    private javax.swing.JMenuItem openM;
    private javax.swing.JMenuItem refresh;
    // End of variables declaration//GEN-END:variables
}
