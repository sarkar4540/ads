/*
 * Copyright 2016 Aniruddha Sarkar.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package ani.ads;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;

/**
 * This is displayed when copying files take place.
 * @author ani
 */
public class Copy extends javax.swing.JFrame {

    /**
     * Creates new form Copy
     * @param flow Describes the flow of the file from computer to phone(-ve) or phone to computer(+ve).
     */
    public Copy(final int flow) {
        initComponents();
        try {
            phone=ImageIO.read(getClass().getResource("/ani/ads/phone.png"));
            computer=ImageIO.read(getClass().getResource("/ani/ads/computer.png"));
            file=ImageIO.read(getClass().getResource("/ani/ads/file.png"));
        } catch (IOException ex) {
            Logger.getLogger(Copy.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.flow=flow;
         t=new Timer();
         t.scheduleAtFixedRate(new TimerTask(){

            @Override
            public void run() {
                Graphics g=getGraphics();
                if(g!=null){
                    int h=getHeight(),w=getWidth();
                    g.setColor(new Color(1,1,1,0.75f));
                    g.fillRect(0, 0, w,h);
                    g.drawImage(flow<0?computer:phone, 0, 0, null);
                    g.drawImage(flow<0?phone:computer, w-60, 0, null);
                    g.drawImage(file, (w/20)*(i++%19+1),25, null);
                    
                    
                }
            }
             
         },0,250);
    }
    int i=0;
    BufferedImage phone,computer,file;
    Timer t;
    
    @Override
    public void dispose(){
        t.cancel();
        super.dispose();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setUndecorated(true);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 370, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 83, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        
       lx=getX();
       ly=getY();
       lx+=(evt.getXOnScreen()-px);
       ly+=evt.getYOnScreen()-py;
       setLocation(lx,ly);
       px=evt.getXOnScreen();
       py=evt.getYOnScreen();
    }//GEN-LAST:event_formMouseDragged

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        
        px=evt.getXOnScreen();
        py=evt.getYOnScreen();
    }//GEN-LAST:event_formMouseMoved
    int lx,px,ly,py;

    int flow;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
